% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/framework.R
\name{rprices}
\alias{rprices}
\title{Generate time series data based on different generators}
\arguments{
\item{process}{The process to use}

\item{start}{Start date}

\item{ohlc}{Whether to include OHLC values}

\item{volume}{Whether to include volume}

\item{\dots}{Additional arguments to date generator}
}
\value{
An xts object with either obs rows or points in the range 
[start,end] and a time series for each symbol provided.
}
\description{
This function will construct a portfolio of asset returns based on the time
range specified or the number of 'observations' requested. The resulting time
series will be based on the specified calendar, as defined by getTradingDates
that uses the timeDate package under the hood.
}
\section{Usage}{

rprices(process, start=Sys.Date(), ohlc=FALSE, volume=FALSE, ...)
}

\section{Details}{

The main entry point is getPortfolioPrices, which generates a TxM xts object 
based on the symbols provided. Prices generated by this function can be used
in risk modeling, as a substitute for brownian motion in Monte Carlo
simulations, and backtesting applications. Studying fractal generation of
time series can be accomplished more directly by calling 
\code{\link{fractal}}.

In addition to the arguments above, it is necessary to pass the appropriate
arguments to the the underlying fractal call. This includes passing in a seed
and generator patterns. If none are provided predefined sets will be used,
although users of this package are encouraged to create their own initiators
and generators.

The getTradingDates function is a utility to generate proper business days for
a given calendar. This is used to be compatible with other applications that
load actual asset data.
}
\examples{
mygbm <- function(x) gbm(x, 40, .03/1440)
ps <- rprices(mygbm, obs=100)
}

